#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
#include <locale.h>
#include <Windows.h>
void Matrix_Yap(int* dizi, int x, int y) {		//random matrix generator
	for (int a = 0; a < x; a++)
	{
		for (int b = 0; b < y; b++) {
			if (a == 0 && b == 0)
			{
				*((dizi + y * a) + b) = 1;
			}
			else if (a == x - 1 && b == y - 1)
			{
				*((dizi + y * a) + b) = 2;
			}
			else
			{
				*((dizi + y * a) + b) = rand() % 2 + 3;
			}
		}
	}
}
void Geri_cevir(int* dizi, int x, int y) {		//Matrixleri orijinal haline döndürür
	for (int a = 0; a < x; a++)
	{
		for (int b = 0; b < y; b++) {
			if (*((dizi + y * a) + b) == 6)
			{
				if (a == 0 && b == 0)
				{
					*((dizi + y * a) + b) = 1;
				}
				else if (a == x - 1 && b == y - 1)
				{
					*((dizi + y * a) + b) = 2;
				}
				else
				{
					*((dizi + y * a) + b) = 4;
				}
			}
		}
	}
}
bool geldik_mi(int* a, int x, int y, int sutun_say) {		// Malum soru
	if (*((a + x * sutun_say) + y) == 2)
	{
		return true;
	}
	else
	{
		return false;
	}
}
void Yaz(int* a, int x, int y) {		//matrix Yazdırılıyor
	for (int i = 0; i < x; i++)
	{
		for (int j = 0; j < y; j++) {
			if (*((a + i * y) + j) == 1)
			{
				printf("S");
			}
			else if (*((a + i * y) + j) == 2)
			{
				printf("G");
			}
			else if (*((a + i * y) + j) == 3)
			{
				printf("#");
			}
			else if (*((a + i * y) + j) == 4)
			{
				printf(".");
			}
			else if (*((a + i * y) + j) == 5)
			{
				printf("X");
			}
			else if (*((a + i *	y) + j) == 6)
			{
				printf("O");
			}
		}
		printf("\n");
	}
}
bool Yol_bul(int* a, int x, int y, int satir_say, int sutun_say) {		//yolumuzu bulduran
	if (x >= 0 && x < satir_say && y >= 0 && y < sutun_say)
	{
		if (!geldik_mi(a, x, y, sutun_say))
		{
			if (*((a + x * sutun_say) + y) == 4 || *((a + x * sutun_say) + y) == 1 || *((a + x * sutun_say) + y) == 2)
			{
				*((a + x * sutun_say) + y) = 6;
				if (Yol_bul(a, x, y + 1, satir_say, sutun_say))		// sağ
				{
					return true;
				}
				if (Yol_bul(a, x + 1, y, satir_say, sutun_say))		//aşağı
				{
					return true;
				}
				if (Yol_bul(a, x, y - 1, satir_say, sutun_say))		//sol
				{
					return true;
				}
				if (Yol_bul(a, x - 1, y, satir_say, sutun_say))		//yukarı
				{
					return true;
				}
				*((a + x * sutun_say) + y) = 4;		//gidilip olmayan yerler
				return false;
			}
			else
			{
				return false;
			}
		}
		else
		{
			*((a + x * sutun_say) + y) = 6;		//sonu da O yapıyor
			return true;
		}
	}
	else
	{
		return false;
	}
}
int main() {
	srand(time(NULL));
	setlocale(LC_ALL, "Turkish");
	int secim = 0;
	int maze1[6][6] = {
		{1,3,3,3,3,3},
		{4,4,4,4,4,4},
		{3,4,3,4,3,4},
		{3,4,3,4,3,4},
		{4,4,4,3,3,3},
		{3,3,4,4,4,2}
	};
	int maze2[9][9] = {
		{1,3,3,3,3,3,3,3,3},
		{4,4,3,4,3,4,4,4,3},
		{3,4,3,4,3,3,3,4,3},
		{3,4,3,4,4,4,4,4,3},
		{3,4,3,3,3,3,3,4,3},
		{3,4,3,4,3,4,4,4,3},
		{3,4,3,4,3,4,3,3,3},
		{3,4,4,4,4,4,4,4,4},
		{3,3,3,3,3,3,3,3,2}
	};
	int maze3[5][11] = {
		{1,3,3,3,3,3,3,3,3,3,3},
		{4,4,4,4,3,4,4,4,4,4,3},
		{3,4,3,4,3,4,3,4,3,3,3},
		{3,4,3,4,4,4,3,4,4,4,4},
		{3,3,3,3,3,3,3,3,3,3,2}
	};
	while (1)
	{
		//ilk seçim ekranı
		printf("****************** Bulmacalar ***********************\n1)Bulmaca 1\n2)Bulmaca 2\n3)Bulmaca 3\n4)Rastgele\n5)Çıkış\nSeçim : ");
		scanf_s("%d", &secim);
		if (secim == 1)
		{
			//1.Matrix
			system("cls");
			printf("************************* 1.Bulmaca ************************\n");
			Yaz(maze1, 6, 6);
			printf("************************** Çözüm 1 **************************\n");
			Yol_bul(maze1, 0, 0, 6, 6);
			Yaz(maze1, 6, 6);
			printf("**************************************************************\n");
			printf("Lejant:\nS = Başlangıç \t G = Son \t # = Duvar \t . = Yol \t O = Gerçek Yol\nDevam etmek için bir tuşa basın\n");
			Geri_cevir(maze1, 6, 6);
			getch();
			system("cls");
			continue;
		}
		else if (secim == 2)
		{
			//2.matrix
			system("cls");
			printf("************************* 2.Bulmaca ************************\n");
			Yaz(maze2, 9, 9);
			printf("************************** Çözüm 2 **************************\n");
			Yol_bul(maze2, 0, 0, 9, 9);
			Yaz(maze2, 9, 9);
			printf("*************************************************************\n");
			printf("Lejant:\nS = Başlangıç \t G = Son \t # = Duvar \t . = Yol \t O = Gerçek Yol\nDevam etmek için bir tuşa basın\n");
			Geri_cevir(maze2, 6, 6);
			getch();
			system("cls");
			continue;
		}
		else if (secim == 3)
		{
			//3.Matrix 
			system("cls");
			printf("************************* 3.Bulmaca ************************\n");
			Yaz(maze3, 5, 11);
			printf("************************** Çözüm 3 **************************\n");
			Yol_bul(maze3, 0, 0, 5, 11);
			Yaz(maze3, 5, 11);
			printf("*************************************************************\n");
			printf("Lejant:\nS = Başlangıç \t G = Son \t # = Duvar \t . = Yol \t O = Gerçek Yol\nDevam etmek için bir tuşa basın\n");
			Geri_cevir(maze3, 5, 11);
			getch();
			system("cls");
			continue;
		}
		else if (secim == 4)
		{
			int x = 0, y = 0, counter = 0;
			while (1)
			{
				system("cls");
				printf("****************** Rastgele Bulmaca ***********************\n");
				printf("Satır ve Sütun değerlerini girin :\n");
				printf("Satır = ");
				scanf_s("%d", &x);
				printf("Sütun = ");
				scanf_s("%d", &y);
				if (x <= 0 || y <= 0) {
					printf("0 dan düşük olamaz !\n");
					Sleep(1000);
					system("cls");
					continue;
				}
				else
				{
					break;
				}
			}
			int* rastgele = (int*)malloc(x * y * sizeof(int));
			while (1)
			{
				Matrix_Yap(rastgele, x, y);
				if (Yol_bul(rastgele, 0, 0, x, y))
				{
					printf("*********************** Oluşan Matrix ***********************\n");
					Geri_cevir(rastgele, x, y);
					Yaz(rastgele, x, y);
					Yol_bul(rastgele, 0, 0, x, y);
					printf("*********************** Çözüm Matrixi ************************\n");
					Yaz(rastgele, x, y);
					printf("**************************************************************\n");
					break;
				}
				++counter;
				continue;
			}
			printf("Devam etmek için bir tuşa basın");
			getch();
			system("cls");
			continue;
		}
		else if (secim == 5)
		{
			printf("Çıkış yapılıyor...");
			exit("0");
		}
		else
		{
			printf("Yanlış seçim yaptınız !\n");
			Sleep(500);
			system("cls");
		}
	}
	return 0;
}
